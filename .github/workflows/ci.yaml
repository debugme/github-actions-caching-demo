name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, reopened, ready_for_review, synchronize ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  install_packages:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'  
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"          
      - uses: actions/cache@v2
        id: yarn-cache    
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies 
        if: steps.yarn-cache.outputs.cache-hit != 'true'         
        run: yarn install --prefer-offline  

  unit-tests-server:
    runs-on: ubuntu-latest
    needs: install_packages
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'    
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"        
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline
      - name: Run server unit tests
        run: echo "running server unit tests"